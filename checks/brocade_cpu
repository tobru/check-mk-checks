#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

brocade_cpu_default_levels = (80.0, 90.0)

def check_brocade_cpu(item, params, info):
    util = float(info[0][0]) 
    infotext = " - %2.1f%% utilization in last 5minutes" % util
    warn, crit = params
    perfdata = [("util", util, warn, crit, 0, 100)]
    if util >= crit:
        return (2, "CRIT" + infotext + " (critical at %d%%)" % crit, perfdata)
    elif util >= warn:
        return (1, "WARN" + infotext + " (warning at %d%%)" % warn, perfdata)
    else:
        return (0, "OK" + infotext, perfdata)

check_info["brocade_cpu"] = {
    "check_function"        : check_brocade_cpu,
    "inventory_function"    : lambda info: [(None, "brocade_cpu_default_levels")],
    "service_description"   : "CPU utilization",
    "has_perfdata"          : True,
    "group"                 : "cpu_utilization",
    "snmp_scan_function"    : lambda oid: "brocade" in oid(".1.3.6.1.2.1.1.1.0").lower(),
    "snmp_info"		    : ( ".1.3.6.1.4.1.1991.1.1.2.11.1.1.5.1.1", [ 300 ]),
}

