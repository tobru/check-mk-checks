#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

# set default value of variable (user can override in main.mk)
brocade_temp_default_values = (60, 70)

def inventory_brocade_temp(info):
   inventory = []
   if len(info) > 0:
       for line in info:
           inventory.append( (line[0].split(': ')[1], "brocade_temp_default_values") )
       return inventory

def check_brocade_temp(item, params, info):
   warn, crit = params
   for name, value in info:
       splittedname = name.split(': ')[1]
       if splittedname == item:
           temp = savefloat(value)/2
           perfdata = [ ( "temp", temp, warn, crit ) ]
           if temp > crit:
               return (2, "CRITICAL - TEMP " + splittedname + " is " + str(temp), perfdata)
           if temp > warn:
               return (1, "WARNING - TEMP " + splittedname + " is " + str(temp), perfdata)
           else:
               return (0, "OK - TEMP " + splittedname + " is " + str(temp), perfdata)
   return (3, "UNKNOWN - temperature is not readable")

check_info['brocade_temp'] = {
    "inventory_function"      : inventory_brocade_temp,
    "check_function"          : check_brocade_temp,
    "service_description"     : "%s",
    "has_perfdata"            : True,
    "group"                   : "temperature",
    "snmp_info"               : ( ".1.3.6.1.4.1.1991.1.1.2.13.1.1", [ "3", "4" ]),
    "snmp_scan_function"      : lambda oid: "brocade" in oid(".1.3.6.1.2.1.1.1.0").lower(),
}
